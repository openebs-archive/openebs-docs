{
  "consumes": [
    "application/json",
    "application/xml"
  ],
  "produces": [
    "application/json",
    "application/xml"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Maya-apiserver helps with creation of CAS Volumes and provides API endpoints to manage those volumes. Maya-apiserver can also be considered as a template engine that can be easily extended to support any kind of CAS storage solutions. It takes as input a set of CAS templates that are converted into CAS K8s YAMLs based on user requests.",
    "title": "Maya API Server.",
    "termsOfService": "https://github.com/openebs/openebs/blob/master/LICENSE",
    "license": {
      "name": "Apache License",
      "url": "http://www.apache.org/licenses/"
    },
    "version": "0.6",
    "x-logo": {
      "backgroundColor": "#FFFFFF",
      "url": "img/openebslogo.png"
    }
  },
  "host": "m-apiserverUrl",
  "basePath": "/latest",
  "paths": {
    "/snapshots/create/": {
      "post": {
        "description": "Create snapshot for a volume.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http"
        ],
        "tags": [
          "Snapshots"
        ],
        "summary": "Create Snapshot",
        "operationId": "CreateSnapshot",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "type": "object",
              "required": [
                "metadata",
                "spec"
              ],
              "properties": {
                "metadata": {
                  "$ref": "#/definitions/SnapshotCreateMetadata"
                },
                "spec": {
                  "$ref": "#/definitions/Spec"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/snapshotCreated"
          },
          "400": {
            "$ref": "#/responses/badRequest"
          },
          "404": {
            "$ref": "#/responses/noSuchVolume"
          },
          "500": {
            "$ref": "#/responses/serverError"
          }
        }
      }
    },

    "/snapshots/list/{volumeName}": {
      "get": {
        "description": "List snapshots for a volume.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http"
        ],
        "tags": [
          "Snapshots"
        ],
        "summary": "List Snapshots",
        "operationId": "GetSnapshot",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "string",
            "x-go-name": "VolumeName",
            "description": "Name of volume.",
            "name": "volumeName",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/snapshotSummary"
          },
          "400": {
            "$ref": "#/responses/badRequest"
          },
          "500": {
            "$ref": "#/responses/serverError"
          }
        }
      }
    },
    "/snapshots/revert/": {
      "put": {

        "description": "Revert snapshots for a volume.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/x-protobuf"
        ],
        "schemes": [
          "http"
        ],
        "tags": [
          "Snapshots"
        ],
        "summary": "Revert Snapshots",
        "operationId": "RevertSnapshot",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "type": "object",
              "required": [
                "metadata",
                "spec"
              ],
              "properties": {
                "metadata": {
                  "$ref": "#/definitions/SnapshotCreateMetadata"
                },
                "spec": {
                  "$ref": "#/definitions/Spec"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/snapshotReverted"
          },
          "400": {
            "$ref": "#/responses/badRequest"
          },
          "404": {
            "$ref": "#/responses/noSuchVolume"
          },
          "500": {
            "$ref": "#/responses/serverError"
          }
        }
      }
    },
    "/volumes/": {
      "get": {
        "description": "List all the volumes.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http"
        ],
        "tags": [
          "Volumes"
        ],
        "summary": "List volumes",
        "operationId": "GetVolume",
        "responses": {
          "200": {
            "$ref": "#/responses/volumeSummary"
          },
          "500": {
            "$ref": "#/responses/serverError"
          }
        }
      },
      "post": {
        "description": "Create a volume.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http"
        ],
        "tags": [
          "Volumes"
        ],
        "summary": "Create Volume.",
        "operationId": "CreateVolume",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "type": "object",
              "required": [
                "metadata"
              ],
              "properties": {
                "labels": {
                  "$ref": "#/definitions/VolumeCreateLabels"
                },
                "metadata": {
                  "$ref": "#/definitions/VolumeCreateMetadata"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/VolumeCreated"
          },
          "400": {
            "$ref": "#/responses/badRequest"
          },
          "500": {
            "$ref": "#/responses/serverError"
          }
        }
      }
    },
    "/volumes/delete/{name}": {
      "get": {
        "description": "Deletes a particular volume.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http"
        ],
        "tags": [
          "Volumes"
        ],
        "summary": "Deletes volumes.",
        "operationId": "DeleteVolume",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "string",
            "x-go-name": "VolumeName",
            "description": "Name of volume.",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {

          "200": {
            "$ref": "#/responses/successDelete"
          },
          "404": {
            "$ref": "#/responses/noSuchVolume"
          },
          "500": {
            "$ref": "#/responses/serverError"
          }
        }
      }
    },
    "/volumes/info/{name}": {
      "get": {
        "description": "Get a specific volume.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "http"
        ],
        "tags": [
          "Volumes"
        ],
        "summary": "List a specific volume.",
        "operationId": "GetSpecificVolume",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "string",
            "x-go-name": "VolumeName",
            "description": "Name of volume.",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/SpecificVolumeSummary"
          },
          "404": {
            "$ref": "#/responses/noSuchVolume"
          },
          "500": {
            "$ref": "#/responses/serverError"
          }
        }
      }
    }
  },
  "definitions": {
    "Actions": {
      "type": "object",
      "x-go-package": "github.com/openebs/maya/cmd/maya-apiserver"
    },
    "Annotations": {
      "type": "object",
      "required": [
        "openebs.io/replica-container-status",
        "openebs.io/storage-pool",
        "openebs.io/capacity",
        "openebs.io/controller-container-status",
        "openebs.io/jiva-iqn",
        "openebs.io/volume-type",
        "deployment.kubernetes.io/revision",
        "openebs.io/jiva-replica-ips",
        "openebs.io/jiva-controller-cluster-ip",
        "openebs.io/jiva-target-portal",
        "openebs.io/volume-monitor",
        "openebs.io/jiva-controller-ips",
        "openebs.io/jiva-replica-status",
        "openebs.io/jiva-replica-count",
        "openebs.io/jiva-controller-status"
      ],
      "properties": {
        "deployment.kubernetes.io/revision": {
          "type": "string",
          "x-go-name": "Property11",
          "example": "1"
        },
        "openebs.io/capacity": {
          "description": "Volume capacity.",
          "type": "string",
          "x-go-name": "Property7",
          "example": "5G"
        },
        "openebs.io/controller-container-status": {
          "description": "Status of controller containers in a pod.",
          "type": "string",
          "x-go-name": "Property8",
          "example": "Running"
        },
        "openebs.io/jiva-controller-cluster-ip": {
          "description": "Jiva controller cluster IP.",
          "type": "string",
          "x-go-name": "Property14",
          "example": "10.0.0.205"
        },
        "openebs.io/jiva-controller-ips": {
          "description": "Jiva controller IP addresses.",
          "type": "string",
          "x-go-name": "Property20",
          "example": "172.17.0.8"
        },
        "openebs.io/jiva-controller-status": {
          "description": "Jiva controller status.",
          "type": "string",
          "x-go-name": "Property24",
          "example": "Running"
        },
        "openebs.io/jiva-iqn": {
          "description": "Volume iqn.",
          "type": "string",
          "x-go-name": "Property9",
          "example": "iqn.2016-09.com.openebs.jiva:test"
        },
        "openebs.io/jiva-replica-count": {
          "description": "Jiva replica count.",
          "type": "string",
          "x-go-name": "Property23",
          "example": "3"
        },
        "openebs.io/jiva-replica-ips": {
          "description": "Jiva replica IP addresses.",
          "type": "string",
          "x-go-name": "Property13",
          "example": "172.17.0.9,nil,nil"
        },
        "openebs.io/jiva-replica-status": {
          "description": "Jiva replica status.",
          "type": "string",
          "x-go-name": "Property22",
          "example": "Running,Pending,Pending"
        },
        "openebs.io/jiva-target-portal": {
          "description": "Jiva target portal address.",
          "type": "string",
          "x-go-name": "Property16",
          "example": "10.0.0.205:3260"
        },
        "openebs.io/replica-container-status": {
          "description": "Status of replica containers in a pod.",
          "type": "string",
          "x-go-name": "Property2",
          "example": "Waiting"
        },
        "openebs.io/storage-pool": {
          "description": "Name of storage pool.",
          "type": "string",
          "x-go-name": "Property4",
          "example": "default"
        },
        "openebs.io/volume-monitor": {
          "description": "Monitoring details.",
          "type": "string",
          "x-go-name": "Property18",
          "example": "false"
        },
        "openebs.io/volume-type": {
          "description": "Volume type.",
          "type": "string",
          "x-go-name": "Property10",
          "example": "jiva"
        }
      },
      "x-go-package": "github.com/openebs/maya/cmd/maya-apiserver"
    },
    "Item": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/ItemMetadata"
        },
        "status": {
          "$ref": "#/definitions/Status"
        }
      },
      "x-go-package": "github.com/openebs/maya/cmd/maya-apiserver"
    },
    "ItemMetadata": {
      "type": "object",
      "required": [
        "name",
        "creationTimestamp"
      ],
      "properties": {
        "annotations": {
          "$ref": "#/definitions/Annotations"
        },
        "creationTimestamp": {
          "description": "The time the snapshot was successfully created.",
          "type": "string",
          "x-go-name": "CreationTimestamp",
          "example": "null"
        },
        "labels": {
          "$ref": "#/definitions/Labels"
        },
        "name": {
          "description": "Volume Name",
          "type": "string",
          "x-go-name": "VolumeName",
          "example": "OpenEBS Volume"
        }
      },
      "x-go-package": "github.com/openebs/maya/cmd/maya-apiserver"
    },
    "Labels": {
      "type": "object",
      "x-go-package": "github.com/openebs/maya/cmd/maya-apiserver"
    },
    "Links": {
      "type": "object",
      "required": [
        "self"
      ],
      "properties": {
        "self": {
          "type": "string",
          "x-go-name": "Self",
          "example": "http://10.32.1.39:9501/v1/snapshotoutputs/pvsnap1"
        }
      },
      "x-go-package": "github.com/openebs/maya/cmd/maya-apiserver"
    },
    "ListMetaData": {
      "type": "object",
      "title": "Standard list metadata.",
      "x-go-package": "github.com/openebs/maya/cmd/maya-apiserver"
    },
    "SnapshotCreateMetadata": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "description": "Snapshot name",
          "type": "string",
          "x-go-name": "Name",
          "example": "snapshotName"
        }
      },
      "x-go-package": "github.com/openebs/maya/cmd/maya-apiserver"
    },
    "Snapshotschema": {
      "type": "object",
      "required": [
        "name",
        "parent",
        "children",
        "removed",
        "usercreated",
        "created",
        "size"
      ],
      "properties": {
        "children": {
          "description": "Name of children snapshot",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Children"
        },
        "created": {
          "type": "string",
          "x-go-name": "Created",
          "example": "2018-05-02T21:06:22Z"
        },
        "name": {
          "description": "Name of snapshot",
          "type": "string",
          "x-go-name": "Name",
          "example": "volume-snap-ae1398a8-1151-4062-8e97-b4d074ee62a3.img"
        },
        "parent": {
          "description": "Name of parent snapshot",
          "type": "string",
          "x-go-name": "Parent",
          "example": "volume-snap-ae1398a8-1151-4062-8e97-b4d074ee62a3.img"
        },
        "removed": {
          "type": "boolean",
          "x-go-name": "Removed",
          "example": false
        },
        "size": {
          "type": "string",
          "x-go-name": "Size",
          "example": "5"
        },
        "usercreated": {
          "type": "boolean",
          "x-go-name": "UserCreated",
          "example": false
        }
      },
      "x-go-package": "github.com/openebs/maya/cmd/maya-apiserver"
    },
    "Spec": {
      "type": "object",
      "required": [
        "volumeName"
      ],
      "properties": {
        "volumeName": {
          "description": "Volume name",
          "type": "string",
          "x-go-name": "VolumeName",
          "example": "pvc-10eb916d-4159-11e8-b222-42010a800202"
        }
      },
      "x-go-package": "github.com/openebs/maya/cmd/maya-apiserver"
    },
    "Status": {
      "type": "object",
      "properties": {
        "Message": {
          "type": "string",
          "x-go-name": "StatusProperty1",
          "example": "null"
        },
        "Phase": {
          "type": "string",
          "x-go-name": "Property2",
          "example": "NotRunning"
        },
        "Reason": {
          "type": "string",
          "x-go-name": "Property3",
          "example": "null"
        }
      },
      "x-go-package": "github.com/openebs/maya/cmd/maya-apiserver"
    },
    "VolumeCreateLabels": {
      "type": "object",
      "properties": {
        "volumeprovisioner.mapi.openebs.io/storage-size": {
          "type": "string",
          "x-go-name": "Storage"
        }
      },
      "x-go-package": "github.com/openebs/maya/cmd/maya-apiserver"
    },
    "VolumeCreateMetadata": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "description": "Volume Name",
          "type": "string",
          "x-go-name": "VolumeName",
          "example": "OpenEBS Volume"
        }
      },
      "x-go-package": "github.com/openebs/maya/cmd/maya-apiserver"
    }
  },
  "responses": {
    "SpecificVolumeSummary": {
      "description": "Summary volume data that matches the query",
      "schema": {
        "type": "object",
        "required": [
          "status",
          "metadata"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/definitions/ItemMetadata"
          },
          "status": {
            "$ref": "#/definitions/Status"
          }
        }
      }
    },
    "VolumeCreated": {
      "description": "Volume Created",
      "schema": {
        "type": "object",
        "required": [
          "metadata",
          "status"
        ],
        "properties": {
          "metadata": {
            "$ref": "#/definitions/ItemMetadata"
          },
          "status": {
            "$ref": "#/definitions/Status"
          }
        }
      }
    },
    "badRequest": {
      "description": "Bad Request",
      "schema": {
        "type": "object",
        "required": [
          "message"
        ],
        "properties": {
          "message": {
            "description": "The Error Message",
            "type": "string",
            "x-go-name": "Message",
            "example": "Volume name missing."
          }
        }
      }
    },
    "noSuchVolume": {
      "description": "No Such Volume",
      "schema": {
        "type": "object",
        "required": [
          "message"
        ],
        "properties": {
          "message": {
            "description": "The Error Message",
            "type": "string",
            "x-go-name": "Message",
            "example": "Volume 'example-vol-name' not found."
          }
        }
      }
    },
    "serverError": {
      "description": "Server Error",
      "schema": {
        "type": "object",
        "required": [
          "message"
        ],
        "properties": {
          "message": {
            "description": "The Error Message",
            "type": "string",
            "x-go-name": "Message",
            "example": "Something went wrong."
          }
        }
      }
    },
    "snapshotCreated": {
      "description": "Create snapshot data that matches the query",
      "schema": {
        "type": "object",
        "required": [
          "type",
          "id",
          "links",
          "actions"
        ],
        "properties": {
          "actions": {
            "$ref": "#/definitions/Actions"
          },
          "id": {
            "type": "string",
            "x-go-name": "Id",
            "example": "pvc-snap1"
          },
          "links": {
            "$ref": "#/definitions/Links"
          },
          "type": {
            "type": "string",
            "x-go-name": "Typ",
            "example": "snapshotOutput"
          }
        }
      }
    },
    "snapshotReverted": {
      "description": "Revert snapshot data that matches the query",
      "schema": {
        "type": "object",
        "required": [
          "message"
        ],
        "properties": {
          "message": {
            "type": "string",
            "x-go-name": "Message",
            "example": "Reverting to snapshot [pvcsnap1] of volume [pvc-d07f8a7a-2d99-11e8-bbe0-42010a800243]"
          }
        }
      }
    },
    "snapshotSummary": {
      "description": "Summary snapshot data that matches the query",
      "schema": {
        "type": "object",
        "required": [
          "SnapshotName"
        ],
        "properties": {
          "SnapshotName": {
            "$ref": "#/definitions/Snapshotschema"
          }
        }
      }
    },
    "successDelete": {
      "description": "Volume Deleted",
      "schema": {
        "type": "object",
        "required": [
          "message"
        ],
        "properties": {
          "message": {
            "description": "The Success Message",
            "type": "string",
            "x-go-name": "Message",
            "example": "Volume 'example-volume' deleted successfully"
          }
        }
      }
    },
    "volumeSummary": {
      "description": "Summary volume data that matches the query",
      "schema": {
        "type": "object",
        "required": [
          "items",
          "metadata"
        ],
        "properties": {
          "items": {
            "description": "List of openebs volumes.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/Item"
            },
            "x-go-name": "Items"
          },
          "metadata": {
            "$ref": "#/definitions/ListMetaData"
          }
        }
      }
    }
  },
  "tags": [
    {
      "description": "A volume in OpenEBS has the same design as a pod in K8s.\nAlternatively,a volume in OpenEBS can be considered as a StoragePod.\n",
      "name": "Volumes",
      "x-displayName": "Volumes"
    },
    {
      "description": "VolumeSnapshot is volume snapshot object accessible to the user. Upon successful creation of the actual\n snapshot by the volume provider it is bound to the corresponding Volume Snapshot Data through the Volume Snapshot Spec.",
      "name": "Snapshots",
      "x-displayName": "Snapshots"
    }
  ],
  "externalDocs": {
    "description": "Back To OpenEBS Documentation",
    "url": "https://docs.openebs.io"
  },
  "x-meta-array": [
    "value1",
    "value2"
  ],
  "x-meta-array-obj": [
    {
      "name": "obj",
      "value": "field"
    }
  ],
  "x-meta-value": "value"
}